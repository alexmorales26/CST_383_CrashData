par(mar=c(2,11,3,2))
barplot(sort(table(substance)),horiz = TRUE, las=1,col = "lightblue", main = "Weather During Crash")
par(mar=c(3,11,2,2))
barplot(sort(table(substance)),horiz = TRUE, las=1,col = "lightblue", main = "Weather During Crash")
?margin
par(mar=c(3,11,3,8))
barplot(sort(table(substance)),horiz = TRUE, las=1,col = "lightblue", main = "Weather During Crash")
par(mar=c(3,11,3,3))
barplot(sort(table(substance)),horiz = TRUE, las=1,col = "lightblue", main = "Weather During Crash")
barplot(sort(table(substance)),horiz = TRUE, las=1,col = "lightblue", main = "Substance use",xlim=range(0,40000))
barplot(sort(table(substance)),horiz = TRUE, las=1,col = "lightblue", main = "Substance use",xlim=range(0,20000))
barplot(sort(table(substance)),horiz = TRUE, las=1,col = "lightblue", main = "Substance use",xlim=max(substance))
par(mar=c(3,10,3,3))
barplot(sort(table(substance)),horiz = TRUE, las=1,col = "lightblue", main = "Substance use")
?las
barplot(sort(table(substance)),horiz = TRUE, las=2,col = "lightblue", main = "Substance use")
barplot(sort(table(substance)),horiz = TRUE, las=3,col = "lightblue", main = "Substance use")
barplot(sort(table(substance)),horiz = TRUE, las=4,col = "lightblue", main = "Substance use")
barplot(sort(table(substance)),horiz = TRUE, las=3,col = "lightblue", main = "Substance use")
barplot(sort(table(substance)),horiz = TRUE, las=2,col = "lightblue", main = "Substance use")
barplot(sort(table(substance)),horiz = FALSE,col = "lightblue", main = "Substance use")
par(mar=c(3,11,3,3))
barplot(sort(table(substance)),horiz = FALSE,col = "lightblue", main = "Substance use")
barplot(sort(table(substance)),horiz = FALSE,las=1,col = "lightblue", main = "Substance use")
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,15,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,9,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,2,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,3,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,13,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,13,3,8))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,13,5,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(5,13,5,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,13,5,7))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,13,5,1))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,13,3,1))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,13,3,9))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
par(mar=c(3,13,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use")
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = 1.5,cex.axis = 1.5)
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .75,cex.axis = .5)
par(mar=c(4,13,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .75,cex.axis = .5)
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
barplot(sort(table(substance)),horiz = FALSE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
barplot(sort(table(substance)),horiz = FALSE,las=1,col = "lightblue", main = "Substance use",cex.names = .2,cex.axis = .5)
barplot(sort(table(substance)),horiz = FALSE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(4,13,4,4))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(4,13,3,4))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,13,3,0))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,16,3,0))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,20,3,0))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,26,3,0))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,100,3,0))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,100,3,100))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,5,3,10))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,15,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,12,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,11,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,11,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5,xlim=max(sort(table(substance))))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5,xlim=range(0,max(sort(table(substance)))))
par(mar=c(3,11,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5))
par(mar=c(3,11,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .5,cex.axis = .5)
par(mar=c(3,11,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = 1,cex.axis = 1)
par(mar=c(3,11,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .75,cex.axis = .75)
par(mar=c(3,12,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .75,cex.axis = .75)
barplot(sort(table(dat$Vehicle.Movement)))
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Movement)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .75,cex.axis = .75)
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Movement)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
par(mfrow=c(2,1))
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Movement)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Damage.Extent)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Damage.Extent)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Movement)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Damage.Extent)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Movement)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
t.control=dat$Traffic.Control
t.control = gsub("N/A","UNKNOWN",t.control)
par(mar=c(3,12,3,3))
barplot(sort(table(t.control)),horiz = TRUE,las=1,col = "lightblue", main = "Traffic Control",cex.names = .75,cex.axis = .75)
plot(dat$Vehicle.Movement ~ dat$Traffic.Control,pch=20)
plot(dat$Vehicle.Movement ~ dat$Traffic.Control,pch=20,type="l")
plot(Vehicle.Movement ~ Traffic.Control,data=dat,pch=20,type="l")
plot(Vehicle.Movement ~ Traffic.Control,data=dat,pch=20,type="p")
density(Vehicle.Movement ~ Traffic.Control,data=dat,pch=20,type="p")
agg= aggregate(Vehicle.Movement,Traffic.Control,data=dat,median)
agg= aggregate(Vehicle.Movement~Traffic.Control,data=dat,median)
plot(dat$Vehicle.Movement)
plot(table(dat$Vehicle.Movement))
plot(table(dat$Vehicle.Movement),type="l")
plot(table(dat$Vehicle.Movement),type="p")
plot(table(dat$Traffic.Control)~table(dat$Vehicle.Movement),type="p")
plot(table(dat$Vehicle.Movement),type="p")
dat$dtime = strptime(as.character(dat$Crash.Date.Time),"%m/%d/%Y %I:%M:%S %p", tz ="EST")
par(mar=c(3,3,.5,.5))
hours = dat$dtime$hour + 1
tab = as.data.frame(table(hours))
#zscale this shoop
plot(table(hours), las = 1, main = "Hours", col = "blue",type = "l")
dtab = as.data.frame(table(hours))
maH = names(which.max(dtab))
dat$dtime = strptime(as.character(dat$Crash.Date.Time),"%m/%d/%Y %I:%M:%S %p", tz ="EST")
par(mar=c(3,3,.5,.5))
hours = dat$dtime$hour + 1
tab = as.data.frame(table(hours))
#zscale this shoop
plot(table(hours), las = 1, main = "Hours", col = "blue",type = "l")
names(max(table(hours)))
dat$dtime = strptime(as.character(dat$Crash.Date.Time),"%m/%d/%Y %I:%M:%S %p", tz ="EST")
par(mar=c(3,3,.5,.5))
hours = dat$dtime$hour + 1
tab = as.data.frame(table(hours))
#zscale this shoop
plot(table(hours), las = 1, main = "Hours", col = "blue",type = "l")
names(max(table(hours)))
dat$dtime = strptime(as.character(dat$Crash.Date.Time),"%m/%d/%Y %I:%M:%S %p", tz ="EST")
par(mar=c(3,3,.5,.5))
hours = dat$dtime$hour + 1
tab = as.data.frame(table(hours))
#zscale this shoop
plot(table(hours), las = 1, main = "Hours", col = "blue",type = "l")
dtab = as.data.frame(table(hours))
maH = names(which.max(table(hours)))
max.line = as.numeric(maH)
abline(v = max.line, col = "red")
miH = names(which.min(table(hours)))
min.line = as.numeric(miH)
abline(v = min.line, col = "green")
plot(table(hours), las = 1, main = "Hours", col = "blue",type = "l")
dtab = as.data.frame(table(hours))
maH = names(which.max(table(hours)))
max.line = as.numeric(maH)
abline(v = max.line, col = "red")
miH = names(which.min(table(hours)))
min.line = as.numeric(miH)
abline(v = min.line, col = "green")
dat$dtime = strptime(as.character(dat$Crash.Date.Time),"%m/%d/%Y %I:%M:%S %p", tz ="EST")
par(mar=c(3,3,.5,.5))
hours = dat$dtime$hour + 1
tab = as.data.frame(table(hours))
#zscale this shoop
plot(table(hours), las = 1, main = "Hours", col = "blue",type = "l")
dtab = as.data.frame(table(hours))
maH = names(which.max(table(hours)))
max.line = as.numeric(maH)
abline(v = max.line, col = "red")
miH = names(which.min(table(hours)))
min.line = as.numeric(miH)
abline(v = min.line, col = "green")
substance=dat$Driver.Substance.Abuse
substance = gsub("N/A","UNKNOWN", substance)
par(mar=c(3,12,3,3))
barplot(sort(table(substance)),horiz = TRUE,las=1,col = "lightblue", main = "Substance use",cex.names = .75,cex.axis = .75)
library(ggmap)
#separating lat and long from location
coordinate = gsub("[()]","",dat$Location)
coordinate = unique(sort(coordinate))
map = get_map(coordinate[1], maptype = "satellite",zoom = 16)
p = ggmap(map)
p
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Movement)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
par(mar=c(3,12,3,3))
barplot(sort(table(dat$Vehicle.Movement)),horiz = TRUE,las=1,col = "lightblue", main = "Vehicle Movement",cex.names = .75,cex.axis = .75)
```{r}
weather = dat$Weather
weather = gsub("N/A","UNKNOWN", weather)
barplot(sort(table(weather)),horiz = TRUE, las=1,col = "lightblue", main = "Weather During Crash")
#checking Seasons
dat$dtime = strptime(as.character(dat$Crash.Date.Time),"%m/%d/%Y %I:%M:%S %p", tz ="EST")
months = dat$dtime$mon +1
months = month.abb[months]
barplot(sort(table(months)), horiz = TRUE, las = 1, main = "Crashes per Month", col = "blue")
library(ggmap)
#separating lat and long from location
coordinate = gsub("[()]","",dat$Location)
coordinate = unique(sort(coordinate))
map = get_map(coordinate[1], maptype = "satellite",zoom = 16)
p = ggmap(map)
p
knn_anomalies = function(x, k=5, thresh=NULL) {
m = as.matrix(dist(x))
d = apply(m, 1, function(x) sort(x)[k+1])
if (is.null(thresh)) {
thresh = 3
}
#
dat = read.csv("https://raw.githubusercontent.com/grbruns/cst383/master/College.csv")
rownames(dat) = dat[,1]
dat = dat[,-1]
dat = dat[sample(1:nrow(dat)),]
dat[,2:18] = scale(dat[,2:18])
features = c("Outstate", "F.Undergrad")
fvs = dat[,features]
# feature vectors to be used for anomaly detection
;
knn_anomalies = function(x, k=5, thresh=NULL) {
m = as.matrix(dist(x))
d = apply(m, 1, function(x) sort(x)[k+1])
if (is.null(thresh)) {
thresh = 3
}
}
;
-\
dat = read.csv("https://raw.githubusercontent.com/grbruns/cst383/master/College.csv")
# make college names into the row
rownames(dat) = dat[,1]
dat = dat[,-1]
dat = dat[sample(1:nrow(dat)),]
# scale features
dat[,2:18] = scale(dat[,2:18])
# features to be used
features = c("Outstate", "F.Undergrad")
plot(F.Undergrad ~ Outstate, data=fvs, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(fvs, k=7, thresh=6)
points(fvs[anoms,], col="red", pch="X")
?dist
knn_anomalies = function(x, k=5, thresh=NULL) {
m = as.matrix(dist(x))
d = apply(m, 1, function(x) sort(x)[k+1])
if (is.null(thresh)) {
thresh = 3
}
#
return (nrow(d) > thresh)
#
# you need to compute and return a vector of the row numbers of
# data frame x for which the corresponding distance is more than
# 'thresh' number of standard deviations above the mean of the
# distances
#
}
plot(F.Undergrad ~ Outstate, data=fvs, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(fvs, k=7, thresh=6)
points(fvs[anoms,], col="red", pch="X")
dat[,2:18] = scale(dat[,2:18])
# features to be used
features = c("Outstate", "F.Undergrad")
# feature vectors to be used for anomaly detection
#
# test the anomaly detector
#
# plot the training data
plot(F.Undergrad ~ Outstate, data=fvs, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(fvs, k=7, thresh=6)
points(fvs[anoms,], col="red", pch="X")
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
points(fvs[anoms,], col="red", pch="X")
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
points(dat[anoms,], col="red", pch="X")
knn_anomalies = function(x, k=5, thresh=NULL) {
m = as.matrix(dist(x))
d = apply(m, 1, function(x) sort(x)[k+1])
if (is.null(thresh)) {
thresh = 3
}
#
return (nrow(sd(m)) > thresh)
#
# you need to compute and return a vector of the row numbers of
# data frame x for which the corresponding distance is more than
# 'thresh' number of standard deviations above the mean of the
# distances
#
}
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
points(dat[anoms,], col="red", pch="X")
knn_anomalies = function(x, k=5, thresh=NULL) {
m = as.matrix(dist(x))
d = apply(m, 1, function(x) sort(x)[k+1])
if (is.null(thresh)) {
thresh = 3
}
#
return (nrow(sd(m,na.rm=TRUE)) > thresh)
#
# you need to compute and return a vector of the row numbers of
# data frame x for which the corresponding distance is more than
# 'thresh' number of standard deviations above the mean of the
# distances
#
}
#
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
points(dat[anoms,], col="red", pch="X")
dat=complete.cases(dat)
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
points(dat[anoms,], col="red", pch="X")
dat = read.csv("https://raw.githubusercontent.com/grbruns/cst383/master/College.csv")
knn_anomalies = function(x, k=5, thresh=NULL) {
m = as.matrix(dist(x))
d = apply(m, 1, function(x) sort(x)[k+1])
if (is.null(thresh)) {
thresh = 3
}
#
return (d)
#
# you need to compute and return a vector of the row numbers of
# data frame x for which the corresponding distance is more than
# 'thresh' number of standard deviations above the mean of the
# distances
#
}
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
points(dat[anoms,], col="red", pch="X")
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
print(anoms)
points(dat[anoms,], col="red", pch="X")
knn_anomalies = function(x, k=5, thresh=NULL) {
m = as.matrix(dist(x))
d = apply(m, 1, function(x) sort(x)[k+1])
if (is.null(thresh)) {
thresh = 3
}
#
return (sd(d))
#
# you need to compute and return a vector of the row numbers of
# data frame x for which the corresponding distance is more than
# 'thresh' number of standard deviations above the mean of the
# distances
#
}
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
print(anoms)
points(dat[anoms,], col="red", pch="X")
knn_anomalies = function(x, k=5, thresh=NULL) {
m = as.matrix(dist(x))
d = apply(m, 1, function(x) sort(x)[k+1])
if (is.null(thresh)) {
thresh = 3
}
std=sd(x)
#
print(std)
return (std)
#
# you need to compute and return a vector of the row numbers of
# data frame x for which the corresponding distance is more than
# 'thresh' number of standard deviations above the mean of the
# distances
#
}
plot(F.Undergrad ~ Outstate, data=dat, pch=20,
col=ifelse(dat$Private=="Yes", "blue", "orange"))
legend("topright", c("public", "private"), fill=c("orange", "blue"), inset=0.05)
anoms = knn_anomalies(dat, k=7, thresh=6)
points(dat[anoms,], col="red", pch="X")
user="brun1992"
dat = read.csv("https://raw.githubusercontent.com/grbruns/cst383/master/College.csv")
rownames(dat) = dat[,1]
dat = dat[,-1]
dat[,2:18] = scale(dat[,2:18])
fdat = dat[,c("Outstate", "F.Undergrad")]
labels =  dat[,"Private"]
x1 = data.frame(Outstate=0, F.Undergrad=0.5)
k = 5
?apply
knitr::opts_chunk$set(echo = TRUE)
dat=read.csv(file = "Crash_report.csv")
plot( sort(table(dat$Vehicle.Movement)),type="l", col="red" )
par(new=TRUE)
plot( sort(table(t.control)), type="l", col="green" )
t.control=dat$Traffic.Control
t.control = gsub("N/A","UNKNOWN",t.control)
barplot( sort(table(dat$Vehicle.Movement)),type="l", col="red" )
par(new=TRUE)
barplot( sort(table(t.control)), type="l", col="green" )
t.control=dat$Traffic.Control
t.control = gsub("N/A","UNKNOWN",t.control)
barplot( sort(table(dat$Vehicle.Movement)),type="l", col="red",las=1 )
par(new=TRUE)
barplot( sort(table(t.control)), type="l", col="green",las=1 )
t.control=dat$Traffic.Control
t.control = gsub("N/A","UNKNOWN",t.control)
barplot( sort(table(dat$Vehicle.Movement)), col="red",las=1 )
par(new=TRUE)
t.control=dat$Traffic.Control
t.control = gsub("N/A","UNKNOWN",t.control)
barplot( sort(table(t.control)) ,col="green",las=1 )
plot( sort(table(dat$Vehicle.Movement)), col="red",las=1 )
par(new=TRUE)
t.control=dat$Traffic.Control
t.control = gsub("N/A","UNKNOWN",t.control)
plot( sort(table(t.control)) ,col="green",las=1 )
substance=dat$Driver.Substance.Abuse
substance = gsub("N/A","UNKNOWN", substance)
non.motorist=dat$Non.Motorist.Substance.Abuse
non.motorist = gsub("N/A","UNKNOWN",non.motorist)
barplot(non.motorist,substance)
barplot(non.motorist)
substance=dat$Driver.Substance.Abuse
substance = gsub("N/A","UNKNOWN", substance)
non.motorist=dat$Non.Motorist.Substance.Abuse
non.motorist = gsub("N/A","UNKNOWN",non.motorist)
barplot(table(non.motorist))
barplot(table(non.motorist),las=1)
barplot(table(non.motorist),las=1,horiz = TRUE)
par(mar=c(3,12,3,3))
barplot(table(non.motorist),las=1,horiz = TRUE)
substance=dat$Driver.Substance.Abuse
substance = gsub("N/A","UNKNOWN", substance)
non.motorist=dat$Non.Motorist.Substance.Abuse
non.motorist = gsub("N/A","UNKNOWN","",non.motorist)
par(mar=c(3,12,3,3))
barplot(table(non.motorist),las=1,horiz = TRUE)
substance=dat$Driver.Substance.Abuse
substance = gsub("N/A","UNKNOWN", substance)
non.motorist=dat$Non.Motorist.Substance.Abuse
non.motorist = gsub("N/A","UNKNOWN"," ",non.motorist)
par(mar=c(3,12,3,3))
barplot(table(non.motorist),las=1,horiz = TRUE)
substance=dat$Driver.Substance.Abuse
substance = gsub("N/A","UNKNOWN", substance)
non.motorist=dat$Non.Motorist.Substance.Abuse
non.motorist = gsub("N/A","UNKNOWN",non.motorist)
non.motorist = gsub("","UNKNOWN",non.motorist)
par(mar=c(3,12,3,3))
barplot(table(non.motorist),las=1,horiz = TRUE)
substance=dat$Driver.Substance.Abuse
substance = gsub("N/A","UNKNOWN", substance)
non.motorist=dat$Non.Motorist.Substance.Abuse
non.motorist = gsub("N/A","UNKNOWN",non.motorist)
non.motorist = gsub(" ","UNKNOWN",non.motorist)
par(mar=c(3,12,3,3))
barplot(table(non.motorist),las=1,horiz = TRUE)
substance=dat$Driver.Substance.Abuse
substance = gsub("N/A","UNKNOWN", substance)
non.motorist=dat$Non.Motorist.Substance.Abuse
non.motorist = gsub("N/A","UNKNOWN",non.motorist)
non.motorist = gsub("UNKNOWN"," ",non.motorist)
par(mar=c(3,12,3,3))
barplot(table(non.motorist),las=1,horiz = TRUE)
par(mar = c(3,11,3,3))
weather = dat$Weather
weather = gsub("N/A","UNKNOWN", weather)
#barplot(sort(table(weather)),horiz = TRUE, las=1,col = "lightblue", main = "Weather During Crash", cex.names = .75, cex.axis = .75)
plot(months,type="l",col="red")
plot(months,type="l",col="red")
plot(months,type="l",col="red",ylim=9000)
